---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blackbox
  namespace: observability
spec:
  interval: 5m
  chart:
    spec:
      chart: prometheus-blackbox-exporter
      version: "9.x"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: observability
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    config:
      modules:
        http_2xx:
          prober: http
          timeout: 5s
          http:
            valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
            valid_status_codes: [200, 204, 301, 302]
            method: GET
            follow_redirects: true
            fail_if_ssl: false
            fail_if_not_ssl: false
            tls_config:
              insecure_skip_verify: true # for now
            preferred_ip_protocol: "ip4"
            ip_protocol_fallback: false
        http_auth:
          prober: http
          timeout: 5s
          http:
            method: GET
            valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
            valid_status_codes: [401, 403]
            fail_if_ssl: false
            fail_if_not_ssl: false
            tls_config:
              insecure_skip_verify: true # for now
            preferred_ip_protocol: "ip4"
            ip_protocol_fallback: false
        http_post_2xx:
          prober: http
          timeout: 5s
          http:
            method: POST
            headers:
              Content-Type: application/json
            body: "{}"
        http_basic_auth_example:
          prober: http
          timeout: 5s
          http:
            method: POST
            headers:
              Content-Type: application/json
            basic_auth:
              username: "username"
              password: "mysecret"
        tls_connect:
          prober: tcp
          timeout: 5s
          tcp:
            tls: true
        icmp_example:
          prober: icmp
          timeout: 5s
          icmp:
            preferred_ip_protocol: "ip4"
            source_ip_address: "127.0.0.1"
        dns_udp_example:
          prober: dns
          timeout: 5s
          dns:
            query_name: "server.home"
            query_type: "A"
            valid_rcodes:
              - NOERROR
            validate_answer_rrs:
              fail_if_matches_regexp:
                - ".*127.0.0.1"
              fail_if_all_match_regexp:
                - ".*127.0.0.1"
              fail_if_not_matches_regexp:
                - "mgmt.infra.server.home.\t300\tIN\tA\t10.10.0.50"
